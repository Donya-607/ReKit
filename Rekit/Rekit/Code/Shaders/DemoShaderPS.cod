//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBufferDemo
// {
//
//   row_major float4x4 cbWorldViewProjection;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 cbWorld;        // Offset:   64 Size:    64 [unused]
//   float4 cbLightDirection;           // Offset:  128 Size:    16 [unused]
//   float4 cbLightColor;               // Offset:  144 Size:    16
//   float4 cbMaterialColor;            // Offset:  160 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CBufferDemo                       cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
//
// Constant buffer to DX9 shader constant mappings:
//
// Target Reg Buffer  Start Reg # of Regs        Data Conversion
// ---------- ------- --------- --------- ----------------------
// c0         cb0             9         1  ( FLT, FLT, FLT, FLT)
//
//
// Level9 shader bytecode:
//
    ps_2_x
    def c1, 0, 1, -1, 0
    dcl t0  // pin<4,5,6,7>

#line 5 "D:\Develop\ReKit\ReKit\ReKit\ReKit\Code\Shaders\DemoShaderPS.hlsl"
    mov r0.w, -t0.w
    add r0.x, r0.w, c1.x
    cmp r0.x, r0.x, c1.y, c1.x
    mul r0, r0.x, c1.z
    texkill r0
    mul r0.xyz, c0.w, c0
    mov r0.w, c1.y
    mul r0, r0, t0  // ::main<0,1,2,3>

#line 3
    mov oC0, r0  // ::main<0,1,2,3>

// approximately 9 instruction slots used
ps_4_0
dcl_constantbuffer CB0[10], immediateIndexed
dcl_input_ps linear v1.xyzw
dcl_output o0.xyzw
dcl_temps 1
//
// Initial variable locations:
//   v0.x <- pin.pos.x; v0.y <- pin.pos.y; v0.z <- pin.pos.z; v0.w <- pin.pos.w; 
//   v1.x <- pin.color.x; v1.y <- pin.color.y; v1.z <- pin.color.z; v1.w <- pin.color.w; 
//   o0.x <- <main return value>.x; o0.y <- <main return value>.y; o0.z <- <main return value>.z; o0.w <- <main return value>.w
//
#line 5 "D:\Develop\ReKit\ReKit\ReKit\ReKit\Code\Shaders\DemoShaderPS.hlsl"
itof r0.x, l(0)
ge r0.x, r0.x, v1.w
if_nz r0.x
  discard_nz l(-1)
endif 

#line 6
mul r0.xyz, cb0[9].wwww, cb0[9].xyzx
mov r0.w, l(1.000000)
mul o0.xyzw, r0.xyzw, v1.xyzw
ret 
// Approximately 9 instruction slots used
